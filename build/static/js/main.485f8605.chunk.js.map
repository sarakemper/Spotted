{"version":3,"sources":["components/toolbar/toolbar.js","components/backdrop/backdrop.js","components/sidedrawer/DrawerToggleButton.js","components/Home.js","components/FormComponents/FormNavBar.js","reducers/formreducers.js","context/FormContext.js","components/FormComponents/GetSpotted.js","components/FormComponents/Authentication.js","components/FormComponents/name/name.js","components/FormComponents/height/height.js","components/FormComponents/age/age.js","components/FormComponents/gender/gender.js","components/FormComponents/UploadInstructions.js","App.js","serviceWorker.js","index.js"],"names":["Toolbar","buttonClicked","className","style","textAlign","onClick","to","width","BackDrop","DrawerToggleButton","useState","clicked","setClicked","e","preventDefault","Home","FormNavBar","props","before","children","FormReducer","state","action","type","length","console","log","name","gender","height","age","FormContext","createContext","FormContextProvider","useReducer","localData","localStorage","getItem","JSON","parse","form","dispatch","useEffect","setItem","stringify","Provider","value","GetSpotted","written","Authenticated","isAuthenticated","isSubmitted","from","Name","useContext","setName","borderColor","setColor","write","setWrite","setAuthen","submitted","setSubmit","nameInput","useRef","current","focus","window","scrollTo","onTouchMove","onSubmit","split","map","letter","replace","ref","onChange","target","placeholder","Height","foot","setFoot","inch","setInch","authenticated","setWritten","colorFoot","setFootColor","colorInch","setInchColor","borderFoot","setBorderFoot","borderInch","setBorderInch","footInput","inchInput","toString","borderBottomColor","onKeyUp","keyCode","blur","inputmode","color","Age","setAge","border","setBorderColor","ageInput","Gender","setGender","UploadInstructions","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.485f8605.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './toolbar.css'\r\nimport {AiFillInfoCircle, AiFillHome, AiOutlineCheckSquare} from 'react-icons/ai'\r\nimport { MdContactMail} from 'react-icons/md'\r\n\r\nconst Toolbar = ({buttonClicked}) => {\r\n    return ( \r\n        <nav className= \"side-drawer\">\r\n            <div style = {{textAlign: \"right\"}}><button onClick = {buttonClicked} className = \"side-drawer-exit\">X</button></div>\r\n            <div className = \"side-drawer-logo\">Spotted</div>\r\n            <div className = \"side-drawer-subtitle\">Get discovered</div>\r\n            <ul>\r\n            <hr></hr>\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        <AiFillHome className = \"side-drawer-icon\" />\r\n                        <div>Home</div>\r\n                    </Link>\r\n                </li>\r\n                <hr></hr>\r\n\r\n                <li>\r\n                    <Link to=\"/\" style = {{width: \"100%\"}}>\r\n                        <AiFillInfoCircle className = \"side-drawer-icon\" />\r\n                        <div>About</div>\r\n                    </Link>\r\n                </li>\r\n                <hr></hr>\r\n\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        <AiOutlineCheckSquare className = \"side-drawer-icon\" />\r\n                        <div>How it works</div>\r\n                    </Link>\r\n                </li>\r\n                <hr></hr>\r\n\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        <MdContactMail className = \"side-drawer-icon\" />\r\n                        <div>Contact</div>\r\n                    </Link>\r\n                </li>\r\n                <hr></hr>\r\n\r\n                <li>\r\n                    <Link to=\"/name\">\r\n                      <button className = \"side-drawer-button\">Become a model</button>  \r\n                    </Link>\r\n                </li>\r\n\r\n            </ul>\r\n      </nav>\r\n     );\r\n}\r\n \r\nexport default Toolbar;","import React from 'react';\r\nimport './backdrop.css'\r\n\r\nconst BackDrop = () => {\r\n    return ( \r\n        <div className = \"backdrop\"></div>\r\n     );\r\n}\r\n \r\nexport default BackDrop;","import React, { useState } from 'react';\r\nimport './DrawerToggleButton.css'\r\nimport Toolbar from '../toolbar/toolbar';\r\nimport BackDrop from '../backdrop/backdrop';\r\n\r\nconst DrawerToggleButton = () => {\r\n    const [clicked, setClicked] = useState(false)\r\n    \r\n    const buttonClicked = (e) => {\r\n        e.preventDefault();\r\n        const clickMe = !clicked\r\n        setClicked(clickMe)\r\n    }\r\n\r\n    if (clicked === false){\r\n        return (\r\n            <button className=\"toggle-button\" onClick = {buttonClicked}>\r\n                <div className = \"toggle-button-line\"/>\r\n                <div className = \"toggle-button-line\"/>\r\n                <div className = \"toggle-button-line\"/>\r\n            </button>\r\n         );\r\n    }\r\n    else{\r\n        return <div>\r\n        <div></div>\r\n            <BackDrop/>\r\n            <Toolbar buttonClicked = {buttonClicked}/>\r\n        </div>\r\n    }\r\n\r\n    \r\n}\r\n \r\nexport default DrawerToggleButton;","import React from 'react';\r\nimport '../styles/Home.css'\r\nimport { Link } from 'react-router-dom'\r\nimport DrawerToggleButton from './sidedrawer/DrawerToggleButton';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className = \"allHome\">\r\n            <div className = \"home\">\r\n                <DrawerToggleButton />\r\n                <div className = \"container\"> Spotted\r\n                </div>\r\n                <Link to = \"/name\" className = \"link\">\r\n                    <button className = \"getSpotted\">\r\n                        Become a model\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport '../../styles/formNavBar.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FormNavBar = (props) => {\r\n    return (\r\n        <div className = \"formNavBar\">\r\n        <div className = \"row\">\r\n            <Link to = {props.before}>\r\n                <button className = \"backButton\">Back</button>\r\n            </Link>\r\n            <div className = \"logo\">Spotted</div>\r\n        </div>\r\n        {props.children}\r\n        <div className = \"outer-bar\">\r\n            <div className = \"inner-bar\" style = {{width: props.width}}></div>\r\n        </div>\r\n        </div> \r\n\r\n     );\r\n}\r\n \r\nexport default FormNavBar;","const FormReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'SUBMIT_NAME':\r\n            if (state.length === 1){\r\n                console.log(state[0].name)\r\n                state[0].name = action.name\r\n                return [...state]\r\n            }\r\n            else{\r\n                return [...state, {name: action.name}]\r\n            }\r\n        case 'SUBMIT_GENDER':\r\n            if (state.length === 1){\r\n                return [...state, {gender: action.gender}]\r\n            }\r\n            else{\r\n                state[1].gender = action.gender\r\n                return [...state]\r\n            }\r\n        case 'SUBMIT_HEIGHT':\r\n            if (state.length === 2){\r\n                return [...state, {height: action.height}]\r\n            }\r\n            else{\r\n                state[2].height = action.height\r\n                return [...state]\r\n            }\r\n        \r\n        case 'SUBMIT_AGE':\r\n            if (state.length === 3){\r\n                 return [...state, {age: action.age}]\r\n            }\r\n            else{\r\n                state[3].age = action.age\r\n                return [...state]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n \r\nexport default FormReducer;","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport FormReducer from '../reducers/formreducers';\r\n\r\nexport const FormContext = createContext()\r\n\r\nconst FormContextProvider = (props) => {\r\n    const [form, dispatch] = useReducer(FormReducer, [], () => {\r\n        const localData = localStorage.getItem('form')\r\n        return localData ? JSON.parse(localData): []\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('form', JSON.stringify(form))\r\n    }, [form])\r\n    \r\n    return ( \r\n        <FormContext.Provider value= {{form, dispatch}}>\r\n            {props.children}\r\n        </FormContext.Provider>\r\n     );\r\n}\r\n \r\nexport default FormContextProvider;","import React from 'react';\r\n\r\nconst GetSpotted = ({written}) => {\r\n    if (written === true){\r\n        return <button className = \"continue\">Get Spotted</button>\r\n    }\r\n    else{\r\n        return null;\r\n    }\r\n}\r\n \r\nexport default GetSpotted;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../../styles/FormQuestions.css'\r\n\r\nconst Authenticated = ({isAuthenticated, isSubmitted, from, to, type}) => {\r\n        if (isAuthenticated === false && isSubmitted === true){\r\n            console.log(\"in invalid\")\r\n            return <div className = \"invalid\">Invalid {type}</div>\r\n        }\r\n        else if (isAuthenticated === true && isSubmitted === true){\r\n            console.log(\"in redirect\")\r\n\r\n            return <Redirect from = {from} to = {to}></Redirect>\r\n        }\r\n        else{\r\n            console.log(\"in else\")\r\n\r\n            return <div></div>;\r\n        }\r\n}\r\n \r\nexport default Authenticated;","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport '../../../styles/FormQuestions.css'\r\nimport FormNavBar from '../FormNavBar';\r\nimport { FormContext } from '../../../context/FormContext';\r\nimport GetSpotted from '../GetSpotted.js';\r\nimport Authenticated from '../Authentication';\r\n\r\nconst newLocal = true;\r\nconst Name = () => {\r\n    const {dispatch, form} = useContext(FormContext)\r\n    \r\n    const [name, setName] = useState('')\r\n\r\n    const [borderColor, setColor] = useState('lightgrey')\r\n    const [write, setWrite] = useState(false)\r\n    const [isAuthenticated, setAuthen] = useState(false)\r\n    const [submitted, setSubmit] = useState(false)\r\n\r\n    const nameInput = useRef()\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value)\r\n        setWrite(true)\r\n    }\r\n\r\n    const authenticated = () => {\r\n        const splitName = name.split(\"\")\r\n        splitName.map((letter) => {\r\n            if (letter === \" \"){\r\n                setAuthen(true)\r\n            }\r\n        })\r\n        if (name.length <= 3 || !name.replace(/\\s/g, '').length){\r\n            setAuthen(false)\r\n        }\r\n\r\n        if (isAuthenticated === false){\r\n            setColor('red')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        authenticated()\r\n        setSubmit(true)\r\n\r\n        dispatch({type: 'SUBMIT_NAME', name: name})\r\n    }\r\n\r\n    useEffect(() => {\r\n        nameInput.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [submitted])\r\n\r\n  \r\n    return (\r\n        <div className = \"noScroll\" onTouchMove = {(e) => {e.preventDefault()}}>\r\n        <FormNavBar before = \"/\" width = \"25%\">\r\n        <div className = \"name\">\r\n            <div className = \"question\">Question 1/4</div>\r\n            <div className = \"nameTitle\">My full name is </div>\r\n            <form onSubmit = {handleSubmit}>\r\n                <Authenticated isAuthenticated = {isAuthenticated} isSubmitted = {submitted} from = \"/name\" to = \"/gender\" type = \"name\"></Authenticated>\r\n                <input ref = {nameInput} onClick = {() => setColor('blue')} onChange = {handleChange} placeholder = \"Grace Smith\" type = \"text\" style = {{borderColor: borderColor}}></input>\r\n                <GetSpotted written = {write}/>\r\n            </form>\r\n        </div>\r\n        </FormNavBar>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Name;","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport FormNavBar from '../FormNavBar';\r\nimport '../../../styles/FormQuestions.css'\r\nimport GetSpotted from '../GetSpotted';\r\nimport { FormContext } from '../../../context/FormContext';\r\nimport Authenticated from '../Authentication';\r\n\r\nconst Height = () => {\r\n    const [foot, setFoot] = useState(0)\r\n    const [inch, setInch] = useState(0)\r\n\r\n    const [authenticated, setAuthen] = useState(true)\r\n    const [written, setWritten] = useState(false)\r\n    const [submitted, setSubmit] = useState(false)\r\n   \r\n    const [colorFoot, setFootColor] = useState('lightgrey')\r\n    const [colorInch, setInchColor] = useState('lightgrey')\r\n\r\n    const [borderFoot, setBorderFoot] = useState('lightgrey')\r\n    const [borderInch, setBorderInch] = useState('lightgrey')\r\n\r\n    const {dispatch} = useContext(FormContext)\r\n\r\n    const footInput = useRef()\r\n    const inchInput = useRef()\r\n\r\n   const handleFoot = (e) => {\r\n           console.log(\"in else\")\r\n           setSubmit(false)\r\n            setFoot(e.target.value)\r\n            setFootColor('black')\r\n            setBorderFoot('blue')\r\n\r\n   }\r\n   \r\n   const handleInch = (e) => {\r\n           setInch(e.target.value)\r\n           setWritten(true)\r\n           setInchColor('black')\r\n           setBorderInch('blue')\r\n       \r\n   }\r\n\r\n   const changeFocus = (e) => {\r\n    if (e.keyCode !== 8 && e.keyCode !== 46 && e.keyCode !== 32){\r\n        footInput.current.blur()\r\n        inchInput.current.focus()\r\n    }\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n       e.preventDefault()\r\n       if (inch >= 0 && inch < 12 && inch.replace(/\\s/g, '').length && foot.replace(/\\s/g, '').length){\r\n           const height = foot.toString() + \" ' \" + inch.toString()\r\n           setAuthen(true)\r\n           setSubmit(true)\r\n           dispatch({type: 'SUBMIT_HEIGHT', height: height})\r\n       }\r\n       else{\r\n           setAuthen(false)\r\n           setSubmit(true)\r\n           setBorderInch('red')\r\n           setBorderFoot('red')\r\n       }\r\n   }\r\n    useEffect(() => {\r\n        footInput.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [submitted])\r\n\r\n  \r\n    return ( \r\n        <div>\r\n            <FormNavBar before = \"/gender\" width = \"75%\">\r\n            <div className = \"height\">\r\n                <div className = \"question\">Question 3/4</div>\r\n                <div className = \"nameTitle\">My height is</div>\r\n                <form onSubmit = {handleSubmit}>\r\n                    <div className = \"group\">\r\n                        <input style = {{borderBottomColor: borderFoot}} ref = {footInput} type = \"text\" placeholder= '5' onKeyUp = {changeFocus} onChange = {handleFoot} inputmode = \"numeric\"></input>\r\n                        <div style = {{color: colorFoot}}>'</div>\r\n                        <input style = {{borderBottomColor: borderInch}} ref = {inchInput} type = \"text\" placeholder= '6' onChange = {handleInch} inputmode = \"numeric\"></input>\r\n                        <div style = {{color: colorInch}}>\"</div>\r\n                    </div>\r\n                    <Authenticated isAuthenticated = {authenticated} isSubmitted = {submitted} from = \"height\" to = \"/age\"/>\r\n                    <GetSpotted written = {written}/>\r\n                </form>\r\n                </div>\r\n                </FormNavBar>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Height;","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport FormNavBar from '../FormNavBar';\r\nimport { FormContext } from '../../../context/FormContext';\r\nimport Authenticated from '../Authentication';\r\nimport GetSpotted from '../GetSpotted';\r\nimport '../../../styles/FormQuestions.css'\r\n\r\nconst Age = () => {\r\n    const [age, setAge] = useState(0)\r\n\r\n    const [authenticated, setAuthen] = useState(true)\r\n    const [written, setWritten] = useState(false)\r\n    const [submitted, setSubmit] = useState(false)\r\n\r\n    const [border, setBorderColor] = useState('lightgrey')\r\n\r\n    const ageInput = useRef()\r\n\r\n    const {dispatch} = useContext(FormContext)\r\n\r\n   const handleAge = (e) => {\r\n            setAge(e.target.value)\r\n            setBorderColor('blue')\r\n            setWritten(true)\r\n   }\r\n\r\n\r\n   const handleSubmit = (e) => {\r\n       e.preventDefault()\r\n       setSubmit(true)\r\n        if (!age.replace(/\\s/g, '').length){\r\n            setAuthen(false)\r\n           setBorderColor('red')\r\n\r\n        }\r\n       else if (age >= 0){\r\n           setAuthen(true)\r\n           dispatch({type: 'SUBMIT_AGE', age: age})\r\n       }\r\n       else{\r\n           setAuthen(false)\r\n           setBorderColor('red')\r\n       }\r\n   }\r\n\r\n    useEffect(() => {\r\n        ageInput.current.focus()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [submitted])\r\n\r\n  \r\n    return ( \r\n        <div className = \"noScroll\">\r\n            <FormNavBar before = \"/height\" width = \"100%\">\r\n            <div className = \"age\">\r\n                <div className = \"question\">Question 4/4</div>\r\n                <div className = \"nameTitle\">My age is</div>\r\n                <form onSubmit = {handleSubmit}>\r\n                    <input style = {{borderBottomColor: border}} ref = {ageInput} type = \"text\" placeholder= '16' onChange = {handleAge} inputmode = \"numeric\"></input>\r\n                    <Authenticated isAuthenticated = {authenticated} isSubmitted = {submitted} from = \"/age\" to = \"/instructions\"/>\r\n                    <GetSpotted written = {written}/>\r\n                </form>\r\n                </div>\r\n                </FormNavBar>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Age;","import React, { useState, useContext, useEffect} from 'react';\r\nimport FormNavBar from '../FormNavBar';\r\nimport '../../../styles/FormQuestions.css'\r\nimport { Link } from 'react-router-dom';\r\nimport GetSpotted from '../GetSpotted';\r\nimport { FormContext } from '../../../context/FormContext';\r\n\r\nconst Gender = () => {\r\n    const [clicked, setClicked] = useState(false)\r\n    const {dispatch} = useContext(FormContext)\r\n\r\n    const [gender, setGender] = useState('')\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'SUBMIT_GENDER', gender: gender})\r\n        setClicked(true)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    return ( \r\n        <div>\r\n            <FormNavBar before = \"/name\" width = \"50%\">\r\n            <div className = \"gender\">\r\n                <div className = \"question\">Question 2/4</div>\r\n                <div className = \"nameTitle\">I identify as </div>\r\n                <form onSubmit = {handleClick}>\r\n                    <button onClick = {() => setGender('Female')}className = \"gender-button\">Female</button>\r\n                    <button onClick = {() => setGender('Male')}className = \"gender-button\">Male</button>\r\n                    <button onClick = {() => setGender('Other')}className = \"gender-button\">Other</button>\r\n                </form>\r\n                <Link to = \"/height\" className = \"link\">\r\n                    <GetSpotted written = {clicked}/>\r\n                </Link>\r\n            </div>\r\n            </FormNavBar>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Gender;","import React from 'react';\r\nimport '../../styles/uploadInstructions.css'\r\nimport '../../styles/formNavBar.css'\r\n\r\nconst UploadInstructions = () => {\r\n    return ( \r\n        <div className = \"upload\">\r\n            <div className = \"spotted\">Spotted</div>\r\n            <button className = \"becomeMode\">Become a model</button>\r\n        </div>\r\n        // <div className = \"uploadInstructions\">\r\n        //     <div className = \"row\">\r\n        //         <Link to = \"/age\">\r\n        //             <button className = \"backButton\">Back</button>\r\n        //         </Link>\r\n        //         <div className = \"logo\">Spotted</div>\r\n        //     </div>\r\n        //         <div className = \"takeSelfie\">Let's take a seflie.</div>\r\n        //         <p className = \"text\"> Thanks for answering our questions.  Get ready to show yourself to the best agencies in Canada. </p>\r\n        //         <nav>1. </nav>\r\n        //         <nav>stuff</nav>\r\n        // </div>\r\n     );\r\n}\r\n \r\nexport default UploadInstructions;","import React from 'react';\nimport Home from './components/Home';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Name from './components/FormComponents/name/name'\nimport FormContextProvider from './context/FormContext';\nimport Height from './components/FormComponents/height/height.js';\nimport Age from './components/FormComponents/age/age.js';\nimport Gender from './components/FormComponents/gender/gender';\nimport UploadInstructions from './components/FormComponents/UploadInstructions';\n\nfunction App() {\n  return (\n    <div className = \"app\">\n        <FormContextProvider>\n          <BrowserRouter>\n              <Route exact path = \"/\" component = {Home} />\n              <Route path = \"/name\" component = {Name} />\n              <Route path = \"/gender\" component = {Gender} />\n              <Route path = \"/height\" component = {Height} />\n              <Route path = \"/age\" component = {Age} />\n              <Route path = \"/instructions\" component = {UploadInstructions} />\n          </BrowserRouter>\n      </FormContextProvider>\n    </div>\n\n  );\n}\n\n// document.body.addEventListener('touchmove', function(e){ e.preventDefault(); }, { passive: false });\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}